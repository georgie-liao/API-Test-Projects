{
	"info": {
		"_postman_id": "cca1defa-333d-4dbd-92f3-aef591705569",
		"name": "Swagger Petstore API",
		"description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n\nContact Support:\n Email: apiteam@swagger.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21469745"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Add a new pet to the store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Assertion  - Response value check\r",
									"pm.test(\"Check key-value pairs with response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.id).to.eql(123);\r",
									"    pm.expect(jsonData.name).to.eql(\"doggie\");\r",
									"    pm.expect(jsonData.status).to.eql(\"pending\");\r",
									"});\r",
									"\r",
									"// Set employee ID as enviroment variable\r",
									"pm.test(\"Set employee ID as an enviroment variable\", function () {\r",
									"    var jsonData = pm.response.json(); \r",
									"\r",
									"pm.environment.set(\"petId\", jsonData.id); })"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"www.sampleurl.com\"\n\n  ],\n  \"id\": 123,\n  \"category\": {\n    \"id\": 12,\n    \"name\": \"categoryname\"\n  },\n  \"tags\": [\n    {\n      \"id\": 13,\n      \"name\": \"tagname\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"tagname2\"\n    }\n  ],\n  \"status\": \"pending\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Assertion  - Response value check\r",
									"pm.test(\"Check key-value pairs with response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.id).to.eql(123);\r",
									"    pm.expect(jsonData.name).to.eql(\"My new doggie\");\r",
									"    pm.expect(jsonData.status).to.eql(\"Available\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"My new doggie\",\n  \"photoUrls\": [\n    \"www.sampleurl.com\"\n\n  ],\n  \"id\": 123,\n  \"category\": {\n    \"id\": 12,\n    \"name\": \"categoryname\"\n  },\n  \"tags\": [\n    {\n      \"id\": 13,\n      \"name\": \"tagname\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"tagname2\"\n    }\n  ],\n  \"status\": \"Available\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/?petId={{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								""
							],
							"query": [
								{
									"key": "petId",
									"value": "{{petId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Assertion  - Response value check\r",
									"pm.test(\"Check key-value pairs with response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    // ID check\r",
									"pm.expect(jsonData.id.toString()).to.eql( pm.environment.get(\"petId\").toString());\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload a pet photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "additonalMetadata",
									"value": "addPetPhoto",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/A2-Student/OneDrive - Aspire2 Group Limited/Desktop/dog photo.jpg"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pet/{{petId}}/uploadImage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{petId}}",
								"uploadImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pet by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/findByStatus?status=available",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pet by tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=tagname",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "tagname"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "Create an order in store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Assertion  - Response value check\r",
									"pm.test(\"Check key-value pairs with response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.petId).to.eql(123);\r",
									"    pm.expect(jsonData.status).to.eql(\"placed\");\r",
									"    pm.expect(jsonData.complete).to.eql(true);\r",
									"});\r",
									"\r",
									"// Set employee ID as enviroment variable\r",
									"pm.test(\"Set employee ID as an enviroment variable\", function () {\r",
									"    var jsonData = pm.response.json(); \r",
									"\r",
									"pm.environment.set(\"orderId\", jsonData.id); })"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"petId\": 123,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2022-08-14T22:10:15.323Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/store/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Assertion  - Response value check\r",
									"pm.test(\"Check key-value pairs with response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.petId).to.eql(123);\r",
									"    pm.expect(jsonData.status).to.eql(\"placed\");\r",
									"    pm.expect(jsonData.complete).to.eql(true);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"petId\": 123,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2022-08-14T22:10:15.323Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/store/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get pet invotory by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Assertion  - Response value check\r",
									"pm.test(\"Check key-value pairs with response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.message).to.eql(\"456\");\r",
									"\r",
									"});\r",
									"\r",
									"// Set employee ID as enviroment variable\r",
									"pm.test(\"Set employee ID as an enviroment variable\", function () {\r",
									"    var jsonData = pm.response.json(); \r",
									"\r",
									"pm.environment.set(\"userId\", jsonData.message.toString()); \r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 456,\r\n  \"username\": \"georgieL\",\r\n  \"firstName\": \"georgie\",\r\n  \"lastName\": \"L\",\r\n  \"email\": \"georgie.l@gmail.com\",\r\n  \"password\": \"Pw123456\",\r\n  \"phone\": \"123456789\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create uers with Array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Assertion  - Response value check\r",
									"pm.test(\"Check key-value pairs with response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": 4562,\r\n    \"username\": \"georgieL2\",\r\n    \"firstName\": \"georgie2\",\r\n    \"lastName\": \"L2\",\r\n    \"email\": \"georgie.l@gmail.com2\",\r\n    \"password\": \"Pw1234562\",\r\n    \"phone\": \"1234562\",\r\n    \"userStatus\": 0\r\n  },\r\n\r\n    {\r\n    \"id\": 4563,\r\n    \"username\": \"georgieL3\",\r\n    \"firstName\": \"georgie3\",\r\n    \"lastName\": \"L3\",\r\n    \"email\": \"georgie.l@gmail.com3\",\r\n    \"password\": \"Pw1234563\",\r\n    \"phone\": \"1234563\",\r\n    \"userStatus\": 0\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/createWithArray",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"createWithArray"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create uers with List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Assertion  - Response value check\r",
									"pm.test(\"Check key-value pairs with response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": 333,\r\n    \"username\": \"name333\",\r\n    \"firstName\": \"Fname333\",\r\n    \"lastName\": \"Lname333\",\r\n    \"email\": \"name.333@email.com\",\r\n    \"password\": \"333\",\r\n    \"phone\": \"33333333\",\r\n    \"userStatus\": 3333\r\n  },\r\n  \r\n  {\r\n    \"id\": 444,\r\n    \"username\": \"name444\",\r\n    \"firstName\": \"Fname444\",\r\n    \"lastName\": \"Lname444\",\r\n    \"email\": \"name.444@email.com\",\r\n    \"password\": \"444\",\r\n    \"phone\": \"4444444\",\r\n    \"userStatus\": 4444\r\n  }\r\n  \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/createWithList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"createWithList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Assertion  - Response value check\r",
									"pm.test(\"Check key-value pairs with response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.username).to.eql(\"georgieL\");\r",
									"  \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{userName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{userName}}"
							],
							"query": [
								{
									"key": "username",
									"value": "georgieL",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Assertion  - Response value check\r",
									"pm.test(\"Check key-value pairs with response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.message).to.eql(\"456\");\r",
									"  \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 456,\r\n  \"username\": \"georgieL\",\r\n  \"firstName\": \"Fname555\",\r\n  \"lastName\": \"Lname555\",\r\n  \"email\": \"georgie.555@gmail.com\",\r\n  \"password\": \"555\",\r\n  \"phone\": \"55555\",\r\n  \"userStatus\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/{{userName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{userName}}"
							],
							"query": [
								{
									"key": "username",
									"value": "georgieL",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/{{userName}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{userName}}"
							],
							"query": [
								{
									"key": "username",
									"value": "georgieL",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logs user into the system",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login?username=georgieL&password=Pw123456",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "georgieL"
								},
								{
									"key": "password",
									"value": "Pw123456"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logs user into the system Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Assertion  - Response value check\r",
									"pm.test(\"Check key-value pairs with response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}